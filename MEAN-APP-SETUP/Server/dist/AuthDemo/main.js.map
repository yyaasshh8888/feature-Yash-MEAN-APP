{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth.guard.ts","./src/app/auth.interceptor.ts","./src/app/layouts/default/default.component.ts","./src/app/layouts/default/default.component.html","./src/app/layouts/default/default.module.ts","./src/app/material/material.module.ts","./src/app/modules/create-user/create-user.component.ts","./src/app/modules/create-user/create-user.component.html","./src/app/modules/dashboard/dashboard.component.ts","./src/app/modules/dashboard/dashboard.component.html","./src/app/modules/edit-user/edit-user.component.ts","./src/app/modules/edit-user/edit-user.component.html","./src/app/modules/posts/posts.component.ts","./src/app/modules/posts/posts.component.html","./src/app/modules/users-form/users-form.component.ts","./src/app/modules/users-form/users-form.component.html","./src/app/modules/users-list/users-list.component.ts","./src/app/modules/users-list/users-list.component.html","./src/app/services/user.service.ts","./src/app/shared/components/footer/footer.component.ts","./src/app/shared/components/footer/footer.component.html","./src/app/shared/components/header/header.component.ts","./src/app/shared/components/header/header.component.html","./src/app/shared/components/sidebar/sidebar.component.ts","./src/app/shared/components/sidebar/sidebar.component.html","./src/app/shared/custom-validators.ts","./src/app/shared/shared.module.ts","./src/app/sign-in/sign-in.component.ts","./src/app/sign-in/sign-in.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { SignInComponent } from './sign-in/sign-in.component';\nimport { PostsComponent } from './modules/posts/posts.component';\nimport { DashboardComponent } from './modules/dashboard/dashboard.component';\nimport { DefaultComponent } from './layouts/default/default.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { AuthGuard } from './auth.guard';\nimport { UsersListComponent } from './modules/users-list/users-list.component';\nimport { CreateUserComponent } from './modules/create-user/create-user.component';\nimport { EditUserComponent } from './modules/edit-user/edit-user.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'signin', pathMatch: 'full' },\n  { path: 'signin', component: SignInComponent },\n  {\n    path: '',\n    component: DefaultComponent,\n    canActivate: [AuthGuard],\n    children: [\n      {\n        path: 'dashboard',\n        component: DashboardComponent,\n      },\n      { path: 'posts', component: PostsComponent },\n      { path: 'users', component: UsersListComponent },\n\n      { path: 'user/create', component: CreateUserComponent },\n      { path: 'user/edit/:userId', component: EditUserComponent },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'client-app';\n}\n","<router-outlet></router-outlet>\n","import { HttpClientModule } from '@angular/common/http';\nimport { DefaultModule } from './layouts/default/default.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AuthGuard } from './auth.guard';\nimport { LoadingInterceptor } from './auth.interceptor';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialModule } from './material/material.module';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MAT_FORM_FIELD_DEFAULT_OPTIONS } from '@angular/material/form-field';\nimport { SignInComponent } from './sign-in/sign-in.component';\n\n@NgModule({\n  declarations: [AppComponent, SignInComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    MaterialModule,\n    DefaultModule,\n  ],\n  providers: [\n    AuthGuard,\n    LoadingInterceptor,\n    {\n      provide: MAT_FORM_FIELD_DEFAULT_OPTIONS,\n      useValue: {\n        appearance: 'outline',\n      },\n    },\n  ],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree,\n  Router,\n} from '@angular/router';\nimport { UserService } from './services/user.service';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private us: UserService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): boolean {\n    if (!this.us.isLoggedIn()) {\n      this.router.navigateByUrl('/signin');\n      this.us.resetToken();\n      return false;\n    } else {\n      return true;\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  HttpEvent,\n  HTTP_INTERCEPTORS,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { UserService } from './services/user.service';\n\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n  constructor(private us: UserService, private router: Router) {}\n\n  intercept(\n    req: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    // emit onStarted event before request execution\n\n    if (req.headers.get('noauth')) {\n      return next.handle(req.clone());\n    } else {\n      let cloneReq: any = req.clone({\n        headers: req.headers.set(\n          'Authorization',\n          'Bearer ' + this.us.getToken()\n        ),\n      });\n      return next.handle(cloneReq).pipe(\n        tap(\n          (event) => {},\n          (err: any) => {\n            if (err.error.auth == false) {\n              this.router.navigateByUrl('/signin');\n            }\n          }\n        )\n      );\n    }\n  }\n}\n\nexport const LoadingInterceptor = {\n  provide: HTTP_INTERCEPTORS,\n  useClass: AuthInterceptor,\n  multi: true,\n};\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-default',\n  templateUrl: './default.component.html',\n  styleUrls: ['./default.component.scss'],\n})\nexport class DefaultComponent implements OnInit {\n  sideBarClosed = true;\n\n  constructor() {}\n\n  ngOnInit() {}\n\n  sideBarToggler() {\n    this.sideBarClosed = !this.sideBarClosed;\n  }\n}\n","<!-- HEADER -->\n<app-header (toggleSideBarForMe)=\"sideBarToggler()\"></app-header>\n<!-- ROOT -->\n<mat-drawer-container>\n  <mat-drawer mode=\"side\" [opened]=\"sideBarClosed\">\n    <!-- SIDEBAR -->\n    <app-sidebar></app-sidebar>\n  </mat-drawer>\n  <mat-drawer-content>\n    <!-- ROUTER OUTLET -->\n    <router-outlet></router-outlet>\n  </mat-drawer-content>\n</mat-drawer-container>\n<!-- FOOTER -->\n<app-footer></app-footer>\n","import { UsersFormComponent } from './../../modules/users-form/users-form.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { EditUserComponent } from './../../modules/edit-user/edit-user.component';\nimport { CreateUserComponent } from './../../modules/create-user/create-user.component';\nimport { UsersListComponent } from './../../modules/users-list/users-list.component';\nimport { MaterialModule } from './../../material/material.module';\nimport { SharedModule } from './../../shared/shared.module';\nimport { PostsComponent } from './../../modules/posts/posts.component';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DefaultComponent } from './default.component';\nimport { DashboardComponent } from '../../modules/dashboard/dashboard.component';\n\n@NgModule({\n  declarations: [\n    DefaultComponent,\n    DashboardComponent,\n    PostsComponent,\n    UsersFormComponent,\n    UsersListComponent,\n    CreateUserComponent,\n    EditUserComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    RouterModule,\n    MaterialModule,\n    SharedModule,\n  ],\n})\nexport class DefaultModule {}\n","import { NgModule } from '@angular/core';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatNativeDateModule, MatRippleModule } from '@angular/material/core';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\n\n@NgModule({\n  exports: [\n    A11yModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n  ],\n})\nexport class MaterialModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-create-user',\n  templateUrl: './create-user.component.html',\n  styleUrls: ['./create-user.component.scss']\n})\nexport class CreateUserComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-users-form></app-users-form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-edit-user',\n  templateUrl: './edit-user.component.html',\n  styleUrls: ['./edit-user.component.scss'],\n})\nexport class EditUserComponent implements OnInit {\n  userId;\n  editPayload: any;\n  constructor(\n    private _route: ActivatedRoute,\n    private userService: UserService\n  ) {}\n\n  ngOnInit(): void {\n    this._route.params.subscribe((param) => {\n      this.userId = param['userId'];\n    });\n  }\n}\n","<app-users-form [userId]=\"userId\"></app-users-form>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.scss'],\n})\nexport class PostsComponent implements OnInit {\n  format: any;\n  url: any;\n  constructor() {}\n\n  ngOnInit(): void {}\n\n  onFileUpload(event: any) {\n    const file: any = event.target.files && event.target.files[0];\n\n    if (file) {\n      let reader = new FileReader();\n      reader.readAsDataURL(file);\n\n      if (file.type.indexOf('image') > -1) {\n        this.format = 'image';\n      } else if (file.type.indexOf('video') > -1) {\n        this.format = 'video';\n      }\n      reader.onload = (ev) => {\n        this.url = ev.target.result;\n      };\n    }\n  }\n}\n","<div class=\"row border p-4\">\n  <div class=\"col-md-5\">\n    <div class=\"row\">\n      <input\n        type=\"file\"\n        accept=\"image/*,video/*\"\n        #fileHandler\n        (change)=\"onFileUpload($event)\"\n      />\n\n      <mat-icon\n        matTooltip=\"Clear\"\n        matTooltipPosition=\"below\"\n        style=\"cursor: pointer\"\n        *ngIf=\"url && format\"\n        (click)=\"url = '' || (format = '' || (fileHandler.value = ''))\"\n        color=\"primary\"\n        >clear</mat-icon\n      >\n    </div>\n  </div>\n  <div class=\"col-md-7\">\n    <img [src]=\"url\" *ngIf=\"format == 'image'\" height=\"300\" />\n    <video [src]=\"url\" *ngIf=\"format == 'video'\" height=\"300\" controls></video>\n  </div>\n</div>\n","import { CustomValidators } from './../../shared/custom-validators';\nimport { Component, OnInit, Input, AfterViewInit } from '@angular/core';\nimport {\n  AbstractControl,\n  FormBuilder,\n  FormGroup,\n  Validators,\n} from '@angular/forms';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-users-form',\n  templateUrl: './users-form.component.html',\n  styleUrls: ['./users-form.component.scss'],\n})\nexport class UsersFormComponent implements OnInit {\n  constructor(\n    private formBuilder: FormBuilder,\n    private userService: UserService,\n    private router: Router,\n    private _snackBar: MatSnackBar\n  ) {}\n  userform: FormGroup;\n  @Input() userId: any;\n  editPayload: any;\n  paswdProfile: IPasswordProfile = {\n    minChar: 8,\n    numbers: 1,\n    upperCase: 1,\n    lowerCase: 1,\n    specialChar: 1,\n    maxPasswordAge: 90,\n    uniqueness: 5,\n  };\n\n  ngOnInit(): void {\n    this.userform = this.formBuilder.group(\n      {\n        username: [\n          '',\n          [\n            Validators.required,\n            Validators.minLength(4),\n            Validators.maxLength(20),\n          ],\n        ],\n        email: [\n          '',\n          [\n            Validators.required,\n            Validators.email,\n            Validators.pattern('^[a-z0-9._%+-]+@[a-z0-9.-]+\\\\.[a-z]{2,4}$'),\n          ],\n        ],\n        password: [\n          null,\n          Validators.compose([\n            Validators.required,\n            // check whether the entered password has a number\n            CustomValidators.patternValidator(\n              /[0-9]/g,\n              this.paswdProfile.numbers,\n              {\n                hasNumber: true,\n              }\n            ),\n            // check whether the entered password has upper case letter\n            CustomValidators.patternValidator(\n              /[A-Z]/g,\n              this.paswdProfile.upperCase,\n              {\n                hasCapitalCase: true,\n              }\n            ),\n            // check whether the entered password has a lower case letter\n            CustomValidators.patternValidator(\n              /[a-z]/g,\n              this.paswdProfile.lowerCase,\n              {\n                hasSmallCase: true,\n              }\n            ),\n            // check whether the entered password has a special character\n            CustomValidators.patternValidator(\n              /[ !@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?]/g,\n              this.paswdProfile.specialChar,\n              {\n                hasSpecialCharacters: true,\n              }\n            ),\n            Validators.minLength(this.paswdProfile.minChar),\n          ]),\n        ],\n        confirmPassword: [null, Validators.compose([Validators.required])],\n      },\n      {\n        // check whether our password and confirm password match\n        validator: CustomValidators.passwordMatchValidator,\n      }\n    );\n  }\n\n  get f(): { [key: string]: AbstractControl } {\n    return this.userform.controls;\n  }\n  // Submit user form details to backend\n  onSubmit(): void {\n    if (!this.userId) {\n      // If userId not exist then creating user\n      this.userService.createUser(this.userform.value).subscribe({\n        next: (result) => {\n          this.router.navigate(['users']); //navigate to login page or componenent\n          this._snackBar.open('User created.', 'Dismiss', {\n            duration: 3000,\n          });\n        },\n        error: (response) => {\n          let errorMsg = response.error.message;\n          this._snackBar.open(errorMsg, 'Dismiss', {\n            duration: 3000,\n          });\n        },\n      });\n    } else {\n      // If userId  exist then updating existing user\n\n      this.userService\n        .updateUserById(this.userform.value, this.userId)\n        .subscribe({\n          next: (result) => {\n            this.router.navigate(['/users/list']); //navigate to login page or componenent\n            this._snackBar.open('User updated.', 'Dismiss', {\n              duration: 3000,\n            });\n          },\n          error: (response) => {\n            let errorMsg = response.error.message;\n            this._snackBar.open(errorMsg, 'Dismiss', {\n              duration: 3000,\n            });\n          },\n        });\n    }\n  }\n\n  ngAfterViewInit(): void {\n    //Called after ngAfterContentInit when the component's view has been initialized. Applies to components only.\n    //Add 'implements AfterViewInit' to the class.\n\n    if (this.userId) {\n      this.userService.getUserById(this.userId).subscribe((response: any) => {\n        response['confirmPassword'] = response.password;\n        this.userform.patchValue(response);\n      });\n    }\n  }\n}\nexport interface IPasswordProfile {\n  minChar: number;\n  numbers: number;\n  upperCase: number;\n  lowerCase: number;\n  specialChar: number;\n  maxPasswordAge: number;\n  uniqueness: number;\n}\n","<div class=\"container-fluid\">\n  <div class=\"card\" [ngStyle]=\"{ height: userId ? '25em' : '40em' }\">\n    <h3>{{ userId ? \"EDIT USER\" : \"CREATE USER\" }}</h3>\n    <form [formGroup]=\"userform\" (ngSubmit)=\"onSubmit()\">\n      <div class=\"row\">\n        <div class=\"form-group offset-md-1 col-md-10\">\n          <mat-form-field>\n            <mat-label>Username</mat-label>\n            <input matInput formControlName=\"username\" type=\"text\" required />\n            <mat-error *ngIf=\"f.username.errors?.required\"\n              >Username is required\n            </mat-error>\n            <mat-error *ngIf=\"f.username.errors?.minlength\"\n              >Username must contain at least 4 characters\n            </mat-error>\n            <mat-error *ngIf=\"f.username.errors?.maxlength\"\n              >Username should not contain more than 20 characters\n            </mat-error>\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-group offset-md-1 col-md-10\">\n          <mat-form-field>\n            <mat-label for=\"email\">Email</mat-label>\n            <input matInput formControlName=\"email\" type=\"text\" required />\n            <!-- [readonly]=\"userId ? true : false\" -->\n            <mat-error *ngIf=\"f.email.errors?.required\"\n              >Email is required</mat-error\n            >\n            <mat-error *ngIf=\"f.email.errors?.email || f.email.errors?.pattern\"\n              >Email is invalid</mat-error\n            >\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-group offset-md-1 col-md-10\" *ngIf=\"!userId\">\n          <mat-form-field>\n            <mat-label>Password</mat-label>\n            <input\n              matInput\n              formControlName=\"password\"\n              type=\"password\"\n              required\n            />\n            <mat-error *ngIf=\"f.password.errors?.required\"\n              >Password is required</mat-error\n            >\n          </mat-form-field>\n        </div>\n\n        <div class=\"form-group offset-md-1 col-md-10\" *ngIf=\"!userId\">\n          <mat-form-field>\n            <mat-label>Confirm Password</mat-label>\n            <input\n              matInput\n              formControlName=\"confirmPassword\"\n              type=\"password\"\n              required\n            />\n            <mat-error\n              *ngIf=\"\n                userform.invalid && userform.get('confirmPassword').touched\n              \"\n            >\n              Password do not match.\n            </mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"offset-md-1 col-md-10 mb-3 mt-1\" *ngIf=\"!userId\">\n          <div class=\"passwordWidgets mda-row\" style=\"text-align: center\">\n            <div\n              class=\"col-md-3\"\n              [ngClass]=\"\n                userform.controls['password'].hasError('required') ||\n                userform.controls['password'].hasError('minlength')\n                  ? userform.get('password').untouched\n                    ? 'widget init'\n                    : 'widget error'\n                  : 'widget success'\n              \"\n            >\n              8 Characters\n            </div>\n\n            <div\n              class=\"col-md-2\"\n              [ngClass]=\"\n                userform.controls['password'].hasError('required') ||\n                userform.controls['password'].hasError('hasSpecialCharacters')\n                  ? userform.get('password').untouched\n                    ? 'widget init'\n                    : 'widget error'\n                  : 'widget success'\n              \"\n            >\n              1 Special\n            </div>\n\n            <div\n              class=\"col-md-3\"\n              [ngClass]=\"\n                userform.controls['password'].hasError('required') ||\n                userform.controls['password'].hasError('hasCapitalCase')\n                  ? userform.get('password').untouched\n                    ? 'widget init'\n                    : 'widget error'\n                  : 'widget success'\n              \"\n            >\n              1 Uppercase\n            </div>\n\n            <div\n              class=\"col-md-3\"\n              [ngClass]=\"\n                userform.controls['password'].hasError('required') ||\n                userform.controls['password'].hasError('hasNumber')\n                  ? userform.get('password').untouched\n                    ? 'widget init'\n                    : 'widget error'\n                  : 'widget success'\n              \"\n            >\n              1 Numeric\n            </div>\n          </div>\n        </div>\n\n        <div class=\"form-group offset-md-1 col-md-10\">\n          <button type=\"submit\" routerLink=\"/users\" mat-stroked-button>\n            Back\n          </button>\n          <button\n            type=\"submit\"\n            color=\"primary\"\n            [disabled]=\"!userform.valid\"\n            style=\"float: right\"\n            mat-flat-button\n          >\n            Submit\n          </button>\n        </div>\n      </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnDestroy, OnInit, ViewChild } from '@angular/core';\n\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTable, MatTableDataSource } from '@angular/material/table';\n\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { UserService } from 'src/app/services/user.service';\ndeclare var require: any;\n\nconst swal = require('sweetalert');\n\n@Component({\n  selector: 'app-users-list',\n  templateUrl: './users-list.component.html',\n  styleUrls: ['./users-list.component.scss'],\n})\nexport class UsersListComponent implements OnInit {\n  dataSource: MatTableDataSource<[]> = new MatTableDataSource();\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild('myTable') table: MatTable<any>;\n  pageSizeOptions: Array<number> = [5, 10, 20];\n  displayedColumns: Array<string> = [];\n  isLoading: boolean;\n  constructor(private us: UserService, private _snackBar: MatSnackBar) {}\n\n  ngOnInit(): void {\n    this.isLoading = true;\n\n    this.displayedColumns = ['username', 'email', 'created', 'Actions'];\n    this.us.getUserList().subscribe((response: any) => {\n      this.dataSource.data = response.users;\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n  applyFilter(event: Event): void {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n\n    if (this.dataSource.paginator) {\n      this.dataSource.paginator.firstPage();\n    }\n  }\n  sortTable(event: Event): void {\n    this.table.renderRows();\n  }\n\n  deleteUser(userId, index) {\n    swal({\n      title: 'Are you sure?',\n      text: 'You will not be able to recover this user.',\n      icon: 'warning',\n      buttons: {\n        cancel: true,\n        confirm: {\n          text: 'Yes',\n          value: true,\n          visible: true,\n          className: 'bg-danger',\n          closeModal: true,\n        },\n      },\n    }).then((isConfirm) => {\n      if (isConfirm) {\n        this.us.deleteUser(userId).subscribe(\n          (data: any) => {\n            this.dataSource.data.splice(index, 1);\n            this.dataSource.paginator = this.paginator;\n            swal('Deleted!', 'User has been deleted.', 'success');\n          },\n          (err) => {}\n        );\n      } else {\n        swal('Cancelled', '', 'error');\n      }\n    });\n  }\n}\n","<div class=\"tableMain col-md-10 offset-md-1\">\n  <div class=\"topMain\" style=\"margin-top: 4em; padding-right: 1%\">\n    <div class=\"col-md-12\">\n      <mat-form-field class=\"text-right\" floatLabel=\"never\" color=\"primary\">\n        <span style=\"display: flex\">\n          <mat-icon style=\"color: #939494\">search</mat-icon>\n          <input\n            matInput\n            placeholder=\"Search\"\n            type=\"text\"\n            (keyup)=\"applyFilter($event)\"\n            #input\n          />\n        </span>\n      </mat-form-field>\n\n      <button\n        style=\"float: right\"\n        mat-stroked-button\n        color=\"primary\"\n        matTooltip=\"Add new user\"\n        matTooltipPosition=\"above\"\n        routerLink=\"/user/create\"\n      >\n        <mat-icon>add</mat-icon>\n        Add User\n      </button>\n    </div>\n  </div>\n  <table\n    mat-table\n    #myTable\n    [dataSource]=\"dataSource\"\n    matSort\n    style=\"width: 100%\"\n  >\n    <ng-container matColumnDef=\"username\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Username</th>\n      <td mat-cell *matCellDef=\"let row\">\n        <button mat-icon-button>\n          <mat-icon>person</mat-icon>{{ row.username }}\n        </button>\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"email\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Email</th>\n      <td mat-cell *matCellDef=\"let row\">\n        {{ row.email }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"created\">\n      <th mat-header-cell *matHeaderCellDef mat-sort-header>Created</th>\n      <td mat-cell *matCellDef=\"let row\">\n        {{ row.created | date : \"d/M/yyyy hh:mm:ss a\" }}\n      </td>\n    </ng-container>\n    <ng-container matColumnDef=\"Actions\">\n      <th mat-header-cell *matHeaderCellDef>Actions</th>\n      <td mat-cell *matCellDef=\"let row; let i = index\">\n        <div class=\"action-buttons d-flex\">\n          <button\n            mat-icon-button\n            matTooltip=\"Click to edit\"\n            matTooltipPosition=\"above\"\n            [disabled]=\"row.username == 'admin'\"\n            [routerLink]=\"['/user/edit/', row._id]\"\n          >\n            <mat-icon>edit</mat-icon>\n          </button>\n\n          <button\n            mat-icon-button\n            matTooltip=\"Click to delete\"\n            matTooltipPosition=\"above\"\n            [disabled]=\"row.username == 'admin'\"\n            (click)=\"deleteUser(row._id, i)\"\n          >\n            <mat-icon>delete</mat-icon>\n          </button>\n        </div>\n      </td>\n    </ng-container>\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    <tr class=\"mat-row\" *matNoDataRow>\n      <td class=\"mat-cell\" colspan=\"12\">No data available.</td>\n    </tr>\n  </table>\n  <!-- preloader -->\n  <div\n    class=\"d-flex align-items-center justify-content-center\"\n    *ngIf=\"isLoading\"\n  >\n    <div\n      class=\"line-scale-pulse-out d-flex align-items-center justify-content-center\"\n    >\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </div>\n  <!-- preloader end-->\n  <mat-paginator [pageSizeOptions]=\"pageSizeOptions\"></mat-paginator>\n</div>\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  apiURL = environment.apiURL;\n  noAuthHeaders = { headers: new HttpHeaders({ noauth: '1' }) };\n  constructor(private http: HttpClient) {}\n  /**\n   * Authenticate user\n   */\n  authenticate(authenticationDetails: any) {\n    return this.http.post(\n      this.apiURL + '/api/authenticate',\n      authenticationDetails,\n      this.noAuthHeaders\n    );\n  }\n  /**\n   * GET current user details\n   */\n  getUser() {\n    return this.http.get(this.apiURL + '/api/users/me');\n  }\n  /**\n   * GET list of all users\n   */\n  getUserList() {\n    return this.http.get(this.apiURL + '/api/user/list');\n  }\n  /**\n   * SET TOKEN in localStorage\n   */\n  setToken(token: any) {\n    localStorage.setItem('token', token);\n  }\n  /**\n   * Remove TOKEN from localStorage\n   */\n  resetToken() {\n    localStorage.removeItem('token');\n  }\n  /**\n   * GET TOKEN from localStorage\n   */\n  readToken() {\n    let token = localStorage.getItem('token');\n\n    if (token) {\n      let userData: any = atob(token.split('.')[1]);\n      return JSON.parse(userData);\n    } else return null;\n  }\n  /**\n   * Check token validation\n   */\n  isLoggedIn() {\n    let userPayload: any = this.readToken();\n\n    if (userPayload) {\n      return userPayload.exp > Date.now() / 1000;\n    } else return false;\n  }\n  /**\n   * GET TOKEN data from localStorage\n   */\n  getToken() {\n    return localStorage.getItem('token');\n  }\n\n  getUserProfile() {\n    return this.http.get(this.apiURL + '/api/user/profile');\n  }\n  /**\n   * Create new user\n   */\n  createUser(createUserPayload: any) {\n    return this.http\n      .post(this.apiURL + '/api/user/create', createUserPayload)\n      .pipe(\n        map((result) => {\n          return result;\n        })\n      );\n  }\n  /**\n   * DELETE user by ID\n   */\n  deleteUser(userId) {\n    return this.http.delete(this.apiURL + '/api/user/delete/' + userId).pipe(\n      map((list) => {\n        return list;\n      })\n    );\n  }\n  /**\n   * GET  user by ID\n   */\n  getUserById(userId) {\n    return this.http.get(this.apiURL + '/api/user/fetch/' + userId);\n  }\n  /**\n   * Update user by ID\n   */\n  updateUserById(userPayload: any, userId) {\n    return this.http\n      .put(this.apiURL + '/api/user/update/' + userId, userPayload)\n      .pipe(\n        map((result) => {\n          return result;\n        })\n      );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss'],\n})\nexport class FooterComponent implements OnInit {\n  year: any = new Date().getFullYear();\n\n  constructor() {}\n\n  ngOnInit(): void {}\n}\n","<mat-divider></mat-divider>\n<footer>&copy; All rights reserved {{ year }}</footer>\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n})\nexport class HeaderComponent implements OnInit {\n  @Output() toggleSideBarForMe: EventEmitter<any> = new EventEmitter();\n  user: any = {};\n\n  constructor(private router: Router, public us: UserService) {}\n\n  ngOnInit() {\n    this.us.getUserProfile().subscribe(\n      (res: any) => {\n        this.user = res.user;\n        console.log('\\n🚀🚀🚀   this.user', this.user);\n      },\n      (err: any) => {\n        alert(err.error.message);\n      }\n    );\n  }\n\n  toggleSideBar() {\n    this.toggleSideBarForMe.emit();\n    setTimeout(() => {\n      window.dispatchEvent(new Event('resize'));\n    }, 300);\n  }\n  logOut() {\n    this.us.resetToken();\n    this.router.navigateByUrl('signin');\n  }\n}\n","<mat-toolbar style=\"background-color: darkcyan; color: aliceblue\">\n  <mat-toolbar-row>\n    <button mat-icon-button (click)=\"toggleSideBar()\">\n      <mat-icon>menu</mat-icon>\n    </button>\n\n    <span style=\"display: flex\"> {{ user?.username | titlecase }} </span>\n    <span class=\"example-spacer\"></span>\n    <button\n      mat-icon-button\n      [matMenuTriggerFor]=\"menu\"\n      aria-label=\"Example icon-button with a menu\"\n    >\n      <mat-icon>more_vert</mat-icon>\n    </button>\n    <mat-menu #menu=\"matMenu\">\n      <button mat-menu-item (click)=\"logOut()\">\n        <mat-icon>exit_to_app</mat-icon>\n        <span>Logout</span>\n      </button>\n    </mat-menu>\n  </mat-toolbar-row>\n</mat-toolbar>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.scss']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-nav-list>\n  <!-- <mat-divider></mat-divider> -->\n\n  <!-- <h2 matSubheader>Pages</h2> -->\n\n  <a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/dashboard\"\n    >Dashboard</a\n  >\n  <a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"posts\"\n    >Media</a\n  >\n  <a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"users\"\n    >User</a\n  >\n\n  <!-- <mat-divider></mat-divider>\n\n  <h2 matSubheader>Tools</h2>\n\n  <a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/contacts\">\n    <mat-icon>import_contacts</mat-icon>\n    Contacts\n  </a>\n\n  <a mat-list-item routerLinkActive=\"list-item-active\" routerLink=\"/contacts\">\n    <mat-icon>contact_phone</mat-icon>\n    Leads\n  </a> -->\n</mat-nav-list>\n","import { ValidationErrors, ValidatorFn, AbstractControl } from '@angular/forms';\n\nexport class CustomValidators {\n  static patternValidator(\n    regex: RegExp,\n    requiredTimes: number,\n    error: ValidationErrors\n  ): ValidatorFn {\n    return (control: AbstractControl): { [key: string]: any } => {\n      if (!control.value) {\n        return null;\n      }\n      const value: string = control.value;\n      const valid = (value.match(regex) || []).length >= requiredTimes;\n      // console.log((value.match(regex) || []).length + ' - ' + requiredTimes);\n      return valid ? null : error;\n    };\n  }\n\n  static passwordMatchValidator(control: AbstractControl) {\n    const password: string = control.get('password').value;\n    const confirmPassword: string = control.get('confirmPassword').value;\n    // compare is the password math\n    if (password !== confirmPassword) {\n      // if they don't match, set an error in our confirmPassword form control\n      //   console.log('No mathch' + password + ' - ' + confirmPassword);\n      return { matchError: 'Passwords do not match' };\n    }\n  }\n}\n","import { RouterModule } from '@angular/router';\nimport { MaterialModule } from './../material/material.module';\nimport { SidebarComponent } from './components/sidebar/sidebar.component';\nimport { FooterComponent } from './components/footer/footer.component';\nimport { HeaderComponent } from './components/header/header.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n@NgModule({\n  declarations: [HeaderComponent, FooterComponent, SidebarComponent],\n  imports: [CommonModule, MaterialModule, RouterModule],\n  exports: [HeaderComponent, FooterComponent, SidebarComponent],\n})\nexport class SharedModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.scss'],\n})\nexport class SignInComponent implements OnInit {\n  loginForm!: FormGroup;\n  loading = false;\n  submitted = false;\n  error = '';\n  constructor(\n    private formBuilder: FormBuilder,\n    private route: ActivatedRoute,\n    private router: Router,\n    private us: UserService\n  ) {}\n\n  ngOnInit(): void {\n    this.loginForm = this.formBuilder.group({\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n    });\n  }\n  onSubmit(loginForm: any) {\n    // console.log('\\n🚀🚀🚀  loginForm', loginForm.value);\n    this.us.authenticate(loginForm.value).subscribe(\n      (response: any) => {\n        this.us.setToken(response['token']);\n        this.router.navigateByUrl('dashboard');\n      },\n      (err: any) => {\n        alert(err.error.message);\n      }\n    );\n  }\n}\n","<fieldset>\n  <div class=\"card\">\n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit(loginForm)\">\n      <h2 class=\"text-center mt-3\">LOGIN</h2>\n      <!-- <div class=\"col-md-10 offset-md-1\"> -->\n      <div class=\"row\">\n        <div class=\"col-md-10 offset-md-1\">\n          <mat-form-field style=\"display: block\">\n            <mat-label>Username</mat-label>\n            <input matInput formControlName=\"username\" type=\"text\" />\n          </mat-form-field>\n        </div>\n        <div class=\"col-md-10 offset-md-1\">\n          <mat-form-field style=\"display: block\">\n            <mat-label>Password</mat-label>\n            <input type=\"password\" formControlName=\"password\" matInput />\n          </mat-form-field>\n        </div>\n        <br />\n        <div class=\"text-center\">\n          <button mat-flat-button color=\"primary\">Login</button>\n        </div>\n      </div>\n      <!-- </div> -->\n    </form>\n    <!-- {{loginForm.value | json}} -->\n  </div>\n</fieldset>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n\n  apiURL: '', //http://localhost:8000\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}